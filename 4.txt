# Load libraries
import pandas as pd
from sklearn.datasets import load_iris 
from sklearn.feature_selection import SelectKBest 
from sklearn.feature_selection import f_classif

# Load iris data into a dataframe
iris_dataset = pd.read_csv("E:\ML-2024-25\Feature Engineering -Data Sets\Data\iris.csv")

print('-------------------------------------------------------------------------')
print('ORIGINAL DATASET')
print('-------------------------------------------------------------------------')
iris_dataset.head()

# Create features and target 
X = iris_dataset.iloc[:,1:5]
Y = iris_dataset.iloc[:,-1] 

https://scikit-learn.org/stable/modules/generated/sklearn.feature_selection.SelectKBest.html

# to select the k most significant features we can use sklearn.feature_selection import SelectKBest.
# syntax: SelectKBest(score_func=<function f_classif>, *, k=10)[source]
# Parameters:
# score_func : callable, default=f_classif
    #Function taking two arrays X and y, and returning a pair of arrays (scores, pvalues) or a single array with scores.
    # The default function only works with classification tasks.
# k : int or “all”, default=10
    #Number of top features to select.

# Attributes:
# scores_ : array-like of shape (n_features,)
        #Scores of features.
# pvalues_ : array-like of shape (n_features,)
       #p-values of feature scores, None if score_func returned only scores.
# feature_names_in_ : ndarray of shape (n_features_in_,)
    # Names of features seen during fit. Defined only when X has feature names that are all strings.




print('Before feature selection: shape-',X.shape)
# configure to select all features
fs = SelectKBest(score_func=f_classif, k=2)
X_kbest_features =fs.fit_transform(X, Y) 
print('After feature selection: shape-',X_kbest_features.shape)


# what are scores for the features
for i in range(len(fs.scores_)):
 print('Feature %d: %f' % (i, fs.scores_[i]))

# plot the scores
from matplotlib import pyplot
pyplot.bar([i for i in range(len(fs.scores_))], fs.scores_)
pyplot.show()

selectedfetures=fs.get_feature_names_out()
selectedfetures
import numpy as np
import pandas as pd

# Step 1: Load the Data from an Online Source
url = "E:\ML-2024-25\Logistic Regression\pima-indians-diabetes.csv"
columns = ['Pregnancies', 'Glucose', 'BloodPressure', 'SkinThickness', 'Insulin',
           'BMI', 'DiabetesPedigreeFunction', 'Age', 'Outcome']

# Load the dataset
df = pd.read_csv(url, header=None, names=columns)

# Display the first few rows of the dataset
print("First 5 rows of the dataset:")
print(df.head())


df.info()

from sklearn.preprocessing import StandardScaler
# Step 2: Split the Data into Features and Target
X = df.drop('Outcome', axis=1)  # Features
y = df['Outcome']               # Target

# Step 3: Apply Standard Scaling to the Features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

from sklearn.model_selection import train_test_split
# Step 4: Split the Data into Training and Testing Sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=42)

print("Shape of X_train:", X_train.shape)
print("Shape of y_train:", y_train.shape)
print("Shape of X_test:", X_test.shape)
print("Shape of y_test:", y_test.shape)

from sklearn.linear_model import LogisticRegression
# Step 5: Train the Logistic Regression Model
model = LogisticRegression()
model.fit(X_train, y_train)

# Step 6: Make Predictions
y_pred = model.predict(X_test)

# Step 7: Evaluate the Model
from sklearn.metrics import confusion_matrix, accuracy_score

# Confusion Matrix
cm = confusion_matrix(y_test, y_pred)
print(" The confusion matrix is=")
print(cm)

https://www.geeksforgeeks.org/seaborn-heatmap-a-comprehensive-guide/

import seaborn as sns
import matplotlib.pyplot as plt
print(" The confusion matrix is in the graphical form")
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues')
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()

# Accuracy Score
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')